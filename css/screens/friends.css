/*
    component란? 
    재사용이 가능한 요소를 의미한다.
*/


/*
    유일한 friend기에 id를 사용했다.
*/
#friends-display-link {
    text-align: center;
    display:block;
    background-color: #fafafa;
    padding: 15px 0px;
    font-size: 18px;
    margin-bottom: 10px;
    margin-top: -10px;
}

#friends-display-link i{
    color:rgba(0,0,0,0.3);
}

.friends-screen {
    padding: 0px var(--horizontal-space);
  }
  
/*
    상위 클래스이기 때문에 friends-screen만 사용하면 되는 것이다.
    mdn padding 자습서: https://developer.mozilla.org/ko/docs/Web/CSS/padding

*/

.friends-screen__channel{
    margin-top: 25px;
    border-top: var(--main-border);
    padding-top: 15px;
}

.friends-screen__channel-header{
    margin-bottom: 30px;
    display: flex;
    justify-content: space-between;
    color: rgba(0,0,0,0.5);
}

/*
    애니메이션 만들기 

    1. opacity가 0이 되었다고 해서 완전히 사라지는 건 아니다.
    2. 이때 사용할 수 있는 것은 visibility: hidden;
    3. html을 무시하고 싶다면 js를 사용해야 한다.
    4. 마지막 keyframe을 계속 유지하고 싶으면 animation에 forwards라는 값을 써야 한다.
*/

@keyframes hideSplashScreen {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
        visibility: hidden;
    }
}
#splash-screen{
    background-color: var(--yellow);
    position: absolute;
    height: 100vh;
    width: 100vw;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 132px;
    animation: hideSplashScreen 0.4s ease-in-out forwards;
    animation-delay: 2s;
}